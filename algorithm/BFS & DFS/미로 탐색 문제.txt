#define _CRT_SECURE_NO_WARNINGS
#include <algorithm>
#include <iostream>
#include <vector>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <queue>
using namespace std;

int a[101][101];
bool check[101][101];
int d[101][101];
int dx[4] = { 0,-1,0,1 };
int dy[4] = { -1,0,1,0 };
int n, m;
queue<pair<int, int>> q;
void bfs() {
	while (!q.empty()) {
		int x = q.front().first;
		int y = q.front().second;
		q.pop();
		for (int k = 0; k < 4; k++) {
			int nx = x + dx[k];
			int ny = y + dy[k];
			if (0 < nx && nx <= m && 0 < ny && ny <= n) {
				if (check[nx][ny] == 0 && a[nx][ny] == 1) {
					q.push(make_pair(nx, ny));
					check[nx][ny] = true;
					d[nx][ny] = d[x][y] + 1;
				}
			}
		}
	}
}

int main() {
	ios::sync_with_stdio(false);
	scanf("%d %d", &n, &m);
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= m; j++) {
			scanf("%1d", &a[j][i]);
		}
	}
	q.push(make_pair(1, 1));
	d[1][1] = 1;
	check[1][1] = true;
	bfs();

	printf("%d\n",d[m][n]);
	return 0;
}