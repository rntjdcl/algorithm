#define _CRT_SECURE_NO_WARNINGS
#include <algorithm>
#include <iostream>
#include <vector>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <queue>
using namespace std;

int xshift[8] = { -1,-1,-1,0,0,1,1,1 };
int yshift[8] = { -1,0,1,-1,1,-1,0,1 };
bool a[100][100];
int check[100][100];
int k = 1;
int n, m;
void dfs(int i, int j) {
	int A, B;
	if (a[i][j] == 1&& check[i][j]==0) {
		check[i][j] = k;
		for (int k = 0; k < 8; k++) {
			A = i + xshift[k];
			B = j + yshift[k];
			if(0<A && A <n+1 && 0 < B && B <m + 1)
				dfs(A, B);
		}
	}
	else
		return;
}

int main() {
	ios::sync_with_stdio(false);
	while(true){
		k = 1;
		memset(a, false,sizeof(a));
		memset(check, false, sizeof(check));
		scanf("%d %d", &n, &m);
		if (n == 0 && m == 0)
			break;
		for (int j = 1; j <= m; j++) {
			for (int i = 1; i <= n; i++) {
				scanf("%d", &a[i][j]); //0 or 1
			}
		}

		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= m; j++) {
				if(check[i][j]==0 && a[i][j] == 1){
					dfs(i, j);
					k++;
				}
			}
		}
		printf("%d\n", k-1);
	}
	return 0;
}